"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerRouter = void 0;
const url_1 = require("url");
const NotFoundHandler_1 = require("../handler/error/NotFoundHandler");
const OptionsRequestHandler_1 = require("../handler/preflight/OptionsRequestHandler");
const provideRequestToHandler_1 = require("./provideRequestToHandler");
class ServerRouter {
    constructor() {
        this.handlers = [];
        this.notFoundHandler = new NotFoundHandler_1.NotFoundHandler();
        this.optionsHandler = new OptionsRequestHandler_1.OptionsRequestHandler();
    }
    register(uri, handler) {
        this.handlers.push({ uri, handler });
    }
    handle(request, response) {
        const handlerItem = this.route(request);
        provideRequestToHandler_1.provideRequestToHandler(handlerItem, request, response);
    }
    route(request) {
        if (request.method === 'OPTIONS') {
            return { handler: this.optionsHandler };
        }
        const url = url_1.parse(request.url, true);
        for (const handlerItem of this.handlers) {
            if (isPathnameMatchingUri(url.pathname, handlerItem.uri)) {
                return handlerItem;
            }
        }
        return { handler: this.notFoundHandler };
    }
}
exports.ServerRouter = ServerRouter;
function isPathnameMatchingUri(pathname, uri) {
    if (typeof uri === 'string') {
        return uri === pathname;
    }
    return uri.test(pathname);
}
//# sourceMappingURL=ServerRouter.js.map