"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageSaveHandler = exports.PAGE_FILE_NAME = void 0;
const tslib_1 = require("tslib");
const http_status_codes_1 = require("http-status-codes");
const prepareDataFromPayload_1 = require("../../../common/payload/prepareDataFromPayload");
const getAccessControlHeaders_1 = require("../../../headers/getAccessControlHeaders");
const handleImplementationError_1 = require("../../error/handleImplementationError");
const updatePage_1 = require("./updatePage");
exports.PAGE_FILE_NAME = 'page.json';
// tslint:disable prefer-function-over-method
class PageSaveHandler {
    constructor(context) {
        this.context = context;
    }
    handle(request, response) {
        this.handleSaveRequest(request, response).catch((error) => handleImplementationError_1.handleImplementationError(response, error));
    }
    handleSaveRequest(request, response) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const requestPayload = yield prepareDataFromPayload_1.prepareDataFromPayload(request);
            yield this.updatePage(requestPayload);
            response.writeHead(http_status_codes_1.OK, Object.assign({ 'Content-Type': 'application/json' }, getAccessControlHeaders_1.getAccessControlHeaders(request.headers)));
            response.write(JSON.stringify(requestPayload));
            response.end();
        });
    }
    updatePage(changes) {
        return updatePage_1.updatePage({
            revisionId: this.context.epid.revisionId,
            uxpinDirPath: this.context.uxpinDirPath,
        }, changes);
    }
}
exports.PageSaveHandler = PageSaveHandler;
//# sourceMappingURL=PageSaveHandler.js.map