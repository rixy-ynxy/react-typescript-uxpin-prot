"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updatePage = void 0;
const tslib_1 = require("tslib");
const lodash_1 = require("lodash");
const getProjectMetadata_1 = require("../../../../metadata/getProjectMetadata");
const getPageContent_1 = require("../../../common/page/content/getPageContent");
const writePageContent_1 = require("../../../common/page/content/writePageContent");
function updatePage(context, changes) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { uxpinDirPath } = context;
        const metadata = yield getProjectMetadata_1.getProjectMetadata(uxpinDirPath);
        const oldPage = yield getPageContent_1.getPageContent(context, metadata);
        const updatedPage = updateElements(oldPage, changes.changed_elements);
        const remainingUpdated = removeElements(updatedPage, changes.deleted_elements);
        yield writePageContent_1.writePageContent(uxpinDirPath, remainingUpdated);
    });
}
exports.updatePage = updatePage;
function updateElements(oldPage, changedElements) {
    const oldPageCopy = lodash_1.cloneDeep(oldPage);
    return lodash_1.reduce(changedElements, (newContent, elementChanges, elementId) => {
        const oldElement = oldPageCopy[elementId] || { props: {} };
        newContent[elementId] = Object.assign(Object.assign(Object.assign({}, oldElement), elementChanges), { props: Object.assign(Object.assign({}, oldElement.props), elementChanges.props) });
        return newContent;
    }, oldPageCopy);
}
function removeElements(pageContent, deleted) {
    const removedElementIds = getElementIds(deleted);
    return lodash_1.reduce(pageContent, (newContent, element, elementId) => {
        if (!removedElementIds.includes(elementId)) {
            newContent[elementId] = element;
        }
        return newContent;
    }, {});
}
function getElementIds(deleted) {
    if (lodash_1.isArray(deleted)) {
        return [];
    }
    return Object.keys(deleted).filter((id) => deleted[id]);
}
//# sourceMappingURL=updatePage.js.map