"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetInfoHandler = void 0;
const tslib_1 = require("tslib");
const http_status_codes_1 = require("http-status-codes");
const getAccessControlHeaders_1 = require("../../headers/getAccessControlHeaders");
const getNoCacheHeaders_1 = require("../../headers/getNoCacheHeaders");
class GetInfoHandler {
    constructor(context) {
        this.context = context;
    }
    handle(request, response) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            response.writeHead(http_status_codes_1.OK, Object.assign(Object.assign({ 'Content-Type': 'application/json' }, getAccessControlHeaders_1.getAccessControlHeaders(request.headers)), getNoCacheHeaders_1.getNoCacheHeaders()));
            response.write(yield this.getInfoResponse());
            response.end();
        });
    }
    getInfoResponse() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const commitHash = getCommitHash(this.context.epid.revisionId);
            const date = new Date();
            const response = {
                lastUpdate: {
                    commitHash,
                    time: date.toISOString(),
                },
            };
            return JSON.stringify(response);
        });
    }
}
exports.GetInfoHandler = GetInfoHandler;
function getCommitHash(revision) {
    const [commitHash] = revision.split('_').reverse();
    return commitHash;
}
//# sourceMappingURL=GetInfoHandler.js.map