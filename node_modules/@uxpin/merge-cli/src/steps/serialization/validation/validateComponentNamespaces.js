"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateComponentNamespaces = void 0;
const getAllComponentsFromCategories_1 = require("../component/categories/getAllComponentsFromCategories");
const getComponentNamespacedName_1 = require("../component/name/getComponentNamespacedName");
const getComponentNamespaceParents_1 = require("../component/name/getComponentNamespaceParents");
function validateComponentNamespaces(categories) {
    const components = getAllComponentsFromCategories_1.getAllComponentsFromCategories(categories);
    const componentsMap = components.reduce((map, component) => {
        const name = getComponentNamespacedName_1.getComponentNamespacedName(component);
        const path = map[name];
        if (path && path !== component.info.dirPath) {
            throw new Error(`Component "${name}" already exists in ${path}!`);
        }
        map[name] = component.info.dirPath;
        return map;
    }, {});
    components.forEach((component) => {
        const name = getComponentNamespacedName_1.getComponentNamespacedName(component);
        const parents = getComponentNamespaceParents_1.getComponentNamespaceParents(name);
        const invalidParent = parents.find((parent) => !componentsMap[parent]);
        if (invalidParent) {
            throw new Error(`Namespace "${invalidParent}" does not exist!`);
        }
    });
}
exports.validateComponentNamespaces = validateComponentNamespaces;
//# sourceMappingURL=validateComponentNamespaces.js.map