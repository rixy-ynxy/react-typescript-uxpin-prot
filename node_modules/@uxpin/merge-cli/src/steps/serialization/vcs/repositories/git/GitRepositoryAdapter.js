"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GitRepositoryAdapter = void 0;
const tslib_1 = require("tslib");
const AbstractRepositoryAdapter_1 = require("../AbstractRepositoryAdapter");
const getCurrentBranch_1 = require("./util/getCurrentBranch");
const getLatestCommit_1 = require("./util/getLatestCommit");
const getMovedFiles_1 = require("./util/getMovedFiles");
class GitRepositoryAdapter extends AbstractRepositoryAdapter_1.AbstractRepositoryAdapter {
    constructor(options) {
        super();
        this.path = options.path;
        this.branchOverride = options.branchOverride;
    }
    getCurrentBranch() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return getCurrentBranch_1.getCurrentBranch(this.path, this.branchOverride);
        });
    }
    getMovedFiles(revision1, revision2) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return getMovedFiles_1.getMovedFiles(this.path, revision1, revision2);
        });
    }
    getLatestCommit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return getLatestCommit_1.getLatestCommit(this.path);
        });
    }
}
exports.GitRepositoryAdapter = GitRepositoryAdapter;
//# sourceMappingURL=GitRepositoryAdapter.js.map