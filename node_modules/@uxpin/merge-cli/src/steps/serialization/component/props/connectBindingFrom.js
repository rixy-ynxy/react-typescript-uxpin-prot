"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.connectBindingFrom = void 0;
const isValidPropName_1 = require("../../validation/props/isValidPropName");
function connectBindingFrom(propertyModel, map) {
    const binding = propertyModel.getBindingDescriptor();
    if (!binding) {
        return;
    }
    if (!isValidPropName_1.isValidPropName(binding.sourcePropName)) {
        throw new Error(`Incorrect property name pointed as a binding source.
  Expected syntax: @uxpinbind [source property name] [value path - optional].
  Examples:
    @uxpinbind onChange 0.target.checked
    @uxpinbind onSelect`);
    }
    const targetPropertyModel = map.get(binding.sourcePropName);
    if (!targetPropertyModel) {
        throw new Error(`Incorrect property name pointed as a binding source.
      No such property: "${binding.sourcePropName}"`);
    }
    if (targetPropertyModel.hasAutoUpdate()) {
        throw new Error(`More than one property is trying to bind the same source property "${binding.sourcePropName}"`);
    }
    targetPropertyModel.setAutoUpdate({
        targetPropName: propertyModel.name,
        valuePath: binding.sourceValuePath,
    });
}
exports.connectBindingFrom = connectBindingFrom;
//# sourceMappingURL=connectBindingFrom.js.map