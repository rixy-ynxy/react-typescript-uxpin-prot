"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ComponentPropertyDefinition_1 = require("../../../../implementation/ComponentPropertyDefinition");
const parseNameTag_1 = require("../parseNameTag");
describe('parseNameTag', () => {
    it('should return valid custom name', () => {
        // having
        const value = 'foo';
        // when
        // then
        expect(parseNameTag_1.parseNameTag(value)).toEqual({
            serialized: { customName: 'foo' },
            type: ComponentPropertyDefinition_1.CustomDescriptorsTags.NAME,
        });
    });
    it('should trim whitespaces', () => {
        // having
        // tslint:disable:no-trailing-whitespace
        const value = `
    foo`;
        // tslint:enable:no-trailing-whitespace
        // when
        // then
        expect(parseNameTag_1.parseNameTag(value)).toEqual({
            serialized: { customName: 'foo' },
            type: ComponentPropertyDefinition_1.CustomDescriptorsTags.NAME,
        });
    });
    it('should return empty object if name is not provided', () => {
        // having
        const value = `

`;
        // when
        // then
        expect(parseNameTag_1.parseNameTag(value)).toEqual(undefined);
    });
});
//# sourceMappingURL=parseNameTag.test.js.map