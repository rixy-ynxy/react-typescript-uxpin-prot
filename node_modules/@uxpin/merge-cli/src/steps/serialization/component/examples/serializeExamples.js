"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serializeExamples = void 0;
const fs_extra_1 = require("fs-extra");
const markdown_to_ast_1 = require("markdown-to-ast");
function serializeExamples(filePath) {
    return fs_extra_1.readFile(filePath, { encoding: 'utf8' })
        .then((content) => markdown_to_ast_1.parse(content).children
        .filter(isSupportedLangTokenWithValue)
        .map((codeBlock) => ({ code: codeBlock.value })))
        .then((examples) => ({ result: examples, warnings: [] }))
        .catch(thunkGetResultForInvalidExamples(filePath));
}
exports.serializeExamples = serializeExamples;
function isSupportedLangTokenWithValue(node) {
    return node.type === markdown_to_ast_1.Syntax.CodeBlock && isSupportedLang(node.lang) && !!node.value;
}
function isSupportedLang(lang) {
    return !!lang && [
        'javascript',
        'js',
        'jsx',
        'typescript',
        'ts',
        'tsx',
    ].includes(lang);
}
function thunkGetResultForInvalidExamples(sourcePath) {
    return (originalError) => {
        const warning = {
            message: 'Cannot serialize component examples',
            originalError,
            sourcePath,
        };
        return { result: [], warnings: [warning] };
    };
}
//# sourceMappingURL=serializeExamples.js.map