"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.decorateWithPresets = void 0;
const tslib_1 = require("tslib");
const lodash_1 = require("lodash");
const getAllComponentsFromCategories_1 = require("../categories/getAllComponentsFromCategories");
const getPresetsBundle_1 = require("./jsx/bundle/getPresetsBundle");
const serializePresets_1 = require("./serializePresets");
function decorateWithPresets(categories, programArgs) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const components = getAllComponentsFromCategories_1.getAllComponentsFromCategories(lodash_1.flatMap(categories, (cat) => cat.result));
        const bundle = yield getPresetsBundle_1.getPresetsBundle(programArgs, components);
        return categories.map(thunkDecorateComponentsWithPresets(bundle));
    });
}
exports.decorateWithPresets = decorateWithPresets;
function thunkDecorateComponentsWithPresets(bundle) {
    return (category) => (category.result.components.reduce((decorated, component) => {
        const { result: presets, warnings } = serializeOptionalPresets(bundle, component.info);
        decorated.result.components.push(Object.assign(Object.assign({}, component), { presets }));
        decorated.warnings.push(...warnings);
        return decorated;
    }, {
        result: Object.assign(Object.assign({}, category.result), { components: [] }),
        warnings: [...category.warnings],
    }));
}
function serializeOptionalPresets(bundle, info) {
    if (!info.presets || !info.presets.length) {
        return { result: [], warnings: [] };
    }
    return serializePresets_1.serializePresets(bundle, info.presets);
}
//# sourceMappingURL=decorateWithPresets.js.map