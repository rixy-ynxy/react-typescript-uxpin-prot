"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.replaceElementsWithReferencesInProps = void 0;
const lodash_1 = require("lodash");
const getPresetElementReference_1 = require("./getPresetElementReference");
const isJSXSerializedElement_1 = require("./isJSXSerializedElement");
function replaceElementsWithReferencesInProps(props) {
    return lodash_1.reduce(props, (mappedProps, propValue, propName) => {
        if (isJSXSerializedElement_1.isJSXSerializedElement(propValue)) {
            mappedProps[propName] = getPresetElementReference_1.getPresetElementReference(propValue);
        }
        else {
            mappedProps[propName] = withoutUnsupportedElements(propValue);
        }
        return mappedProps;
    }, {});
}
exports.replaceElementsWithReferencesInProps = replaceElementsWithReferencesInProps;
function withoutUnsupportedElements(prop) {
    if (!lodash_1.isArray(prop) && !lodash_1.isObject(prop)) {
        return prop;
    }
    return lodash_1.reduce(prop, (validProp, subProp, key) => {
        if (isJSXSerializedElement_1.isJSXSerializedElement(subProp)) {
            return validProp;
        }
        if (lodash_1.isArray(validProp)) {
            validProp.push(withoutUnsupportedElements(subProp));
        }
        else {
            validProp[key] = withoutUnsupportedElements(subProp);
        }
        return validProp;
    }, lodash_1.isArray(prop) ? [] : {});
}
//# sourceMappingURL=replaceElementsWithReferencesInProps.js.map