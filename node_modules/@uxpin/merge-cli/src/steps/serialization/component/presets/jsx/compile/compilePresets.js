"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.compilePresets = void 0;
const tslib_1 = require("tslib");
const fs_extra_1 = require("fs-extra");
const path_1 = require("path");
const getProjectRoot_1 = require("../../../../../../program/args/providers/paths/getProjectRoot");
const getTempDirPath_1 = require("../../../../../../program/args/providers/paths/getTempDirPath");
const WebpackCompiler_1 = require("../../../../../building/compiler/webpack/WebpackCompiler");
const createBundleSource_1 = require("../bundle/createBundleSource");
const generateVirtualModules_1 = require("./generateVirtualModules");
const getPresetsBundleWebpackConfig_1 = require("./getPresetsBundleWebpackConfig");
function compilePresets(programArgs, components) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const sourcePath = yield createBundleSource_1.createBundleSource(programArgs, components);
        const bundlePath = yield compileWithWebpack(programArgs, components, sourcePath);
        yield fs_extra_1.unlink(sourcePath);
        return bundlePath;
    });
}
exports.compilePresets = compilePresets;
function compileWithWebpack(programArgs, components, sourcePath) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { base } = path_1.parse(sourcePath);
        const uxpinDirPath = getTempDirPath_1.getTempDirPath(programArgs);
        const bundlePath = path_1.join(uxpinDirPath, `__bundle__${base}`);
        const { webpackConfig } = programArgs;
        const projectRoot = getProjectRoot_1.getProjectRoot(programArgs);
        const virtualModules = generateVirtualModules_1.generateVirtualModules(components);
        const config = getPresetsBundleWebpackConfig_1.getPresetsBundleWebpackConfig({
            bundlePath,
            projectRoot,
            sourcePath,
            virtualModules,
            webpackConfig,
        });
        const compiler = new WebpackCompiler_1.WebpackCompiler(config);
        yield compiler.compile();
        return bundlePath;
    });
}
//# sourceMappingURL=compilePresets.js.map