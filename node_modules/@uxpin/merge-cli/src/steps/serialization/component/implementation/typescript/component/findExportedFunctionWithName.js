"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.findExportedFunctionWithName = void 0;
const ts = require("typescript");
const getNodeName_1 = require("../node/getNodeName");
const isExported_1 = require("./isExported");
const isNodeExported_1 = require("./isNodeExported");
function getFunctionDeclaration(context, functionName) {
    let result;
    ts.forEachChild(context.file, (node) => {
        if (ts.isFunctionDeclaration(node) && getNodeName_1.getNodeName(node) === functionName) {
            result = node;
        }
    });
    return result;
}
function findExportedFunctionWithName(context, functionName) {
    const result = getFunctionDeclaration(context, functionName);
    if (result && isExported_1.isExported(result)) {
        return result;
    }
    let isFunctionExported = false;
    ts.forEachChild(context.file, (node) => {
        if (!isFunctionExported) {
            isFunctionExported = isNodeExported_1.isNodeExported(node, functionName);
        }
    });
    return isFunctionExported ? result : undefined;
}
exports.findExportedFunctionWithName = findExportedFunctionWithName;
//# sourceMappingURL=findExportedFunctionWithName.js.map