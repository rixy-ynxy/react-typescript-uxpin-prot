"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseTags = void 0;
const isDefined_1 = require("../../../../../../common/isDefined");
const isValidDescriptor_1 = require("../../../props/parsing/descriptors/isValidDescriptor");
const parseBindTag_1 = require("../../../props/parsing/descriptors/parseBindTag");
const parseDescriptionTag_1 = require("../../../props/parsing/descriptors/parseDescriptionTag");
const parseHiddenTag_1 = require("../../../props/parsing/descriptors/parseHiddenTag");
const parseNameTag_1 = require("../../../props/parsing/descriptors/parseNameTag");
const parseTypeTag_1 = require("../../../props/parsing/descriptors/parseTypeTag");
const ComponentPropertyDefinition_1 = require("../../ComponentPropertyDefinition");
function parseTags(tags) {
    return tags.map(parseTag).filter(isDefined_1.isDefined);
}
exports.parseTags = parseTags;
function parseTag(tag) {
    const matches = tag.match(/(^@[a-z]+)(\ ?)+([^]+)?/m);
    if (!matches) {
        return;
    }
    const [, descriptor, , value] = matches;
    if (!isValidDescriptor_1.isValidDescriptor(descriptor)) {
        return;
    }
    switch (descriptor) {
        case ComponentPropertyDefinition_1.CustomDescriptorsTags.DESCRIPTION: {
            return parseDescriptionTag_1.parseDescriptionTag(value);
        }
        case ComponentPropertyDefinition_1.CustomDescriptorsTags.HIDDEN: {
            return parseHiddenTag_1.parseHiddenTag();
        }
        case ComponentPropertyDefinition_1.CustomDescriptorsTags.NAME: {
            return parseNameTag_1.parseNameTag(value);
        }
        case ComponentPropertyDefinition_1.CustomDescriptorsTags.TYPE: {
            return parseTypeTag_1.parseTypeTag(value);
        }
        case ComponentPropertyDefinition_1.CustomDescriptorsTags.BIND: {
            return parseBindTag_1.parseBindTag(value);
        }
        default:
            return;
    }
}
//# sourceMappingURL=parseTags.js.map