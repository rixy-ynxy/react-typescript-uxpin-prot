"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertPropertySignatureSymbolToPropertyDefinition = void 0;
const convertTypeToPropertyType_1 = require("../type/node/convertTypeToPropertyType");
const getDefaultValueFromJSDoc_1 = require("./getDefaultValueFromJSDoc");
const getJSDocDocumentation_1 = require("./getJSDocDocumentation");
const getPropertyCustomDescriptiors_1 = require("./getPropertyCustomDescriptiors");
const getPropertyName_1 = require("./getPropertyName");
const isPropertyRequired_1 = require("./isPropertyRequired");
function convertPropertySignatureSymbolToPropertyDefinition(context, propertySymbol) {
    const type = context.checker.getTypeFromTypeNode(propertySymbol.valueDeclaration.type);
    const name = getPropertyName_1.getPropertyName(propertySymbol);
    if (!name) {
        throw new Error('Cannot get name from property symbol');
    }
    return Object.assign(Object.assign({ description: getJSDocDocumentation_1.getJSDocDocumentation(context, propertySymbol), isRequired: isPropertyRequired_1.isPropertyRequired(propertySymbol), name, type: convertTypeToPropertyType_1.convertTypeToPropertyType(context, type, propertySymbol.getJsDocTags()) }, getDefaultValueFromJSDoc_1.getDefaultValueFromJSDoc(propertySymbol)), getPropertyCustomDescriptiors_1.getPropertyCustomDescriptors(propertySymbol));
}
exports.convertPropertySignatureSymbolToPropertyDefinition = convertPropertySignatureSymbolToPropertyDefinition;
//# sourceMappingURL=convertPropertySignatureSymbolToPropertyDefinition.js.map