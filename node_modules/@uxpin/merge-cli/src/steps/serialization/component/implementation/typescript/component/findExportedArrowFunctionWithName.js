"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.findExportedArrowFunctionWithName = void 0;
const ts = require("typescript");
const getNodeName_1 = require("../node/getNodeName");
const isArrowFunction_1 = require("./isArrowFunction");
const isExported_1 = require("./isExported");
const isNodeExported_1 = require("./isNodeExported");
function findExportedArrowFunctionWithName(context, functionName) {
    let result;
    let isFunctionExported = false;
    ts.forEachChild(context.file, (node) => {
        if (ts.isVariableStatement(node) &&
            isArrowFunction_1.isArrowFunction(node) &&
            getNodeName_1.getNodeName(node.declarationList.declarations[0]) === functionName) {
            // export const Component = () => {}
            if (isExported_1.isExported(node)) {
                isFunctionExported = true;
            }
            result = node.declarationList.declarations[0].initializer;
        }
        // const Component = () => {}
        // export { Component }
        if (isNodeExported_1.isNodeExported(node, functionName)) {
            isFunctionExported = true;
        }
    });
    return isFunctionExported ? result : undefined;
}
exports.findExportedArrowFunctionWithName = findExportedArrowFunctionWithName;
//# sourceMappingURL=findExportedArrowFunctionWithName.js.map