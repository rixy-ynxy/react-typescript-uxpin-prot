"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseTSComponentProperty = void 0;
const convertMethodSignatureSymbolToPropertyDefinition_1 = require("./symbol/convertMethodSignatureSymbolToPropertyDefinition");
const convertPropertySignatureSymbolToPropertyDefinition_1 = require("./symbol/convertPropertySignatureSymbolToPropertyDefinition");
const getValidSymbol_1 = require("./symbol/getValidSymbol");
const isMethodSignatureSymbol_1 = require("./symbol/isMethodSignatureSymbol");
const isPropertySignatureSymbol_1 = require("./symbol/isPropertySignatureSymbol");
function parseTSComponentProperty(context, property, defaultProps) {
    try {
        const propertySymbol = getValidSymbol_1.getValidSymbol(property);
        if (!propertySymbol) {
            return;
        }
        if (isPropertySignatureSymbol_1.isPropertySignatureSymbol(propertySymbol)) {
            return propertySignatureToPropertyDefinition(context, propertySymbol, defaultProps);
        }
        if (isMethodSignatureSymbol_1.isMethodSignatureSymbol(propertySymbol)) {
            return convertMethodSignatureSymbolToPropertyDefinition_1.convertMethodSignatureSymbolToPropertyDefinition(context, propertySymbol);
        }
    }
    catch (e) {
        return;
    }
}
exports.parseTSComponentProperty = parseTSComponentProperty;
function propertySignatureToPropertyDefinition(context, propSymbol, defaultProps) {
    const prop = convertPropertySignatureSymbolToPropertyDefinition_1.convertPropertySignatureSymbolToPropertyDefinition(context, propSymbol);
    if (prop.name in defaultProps) {
        prop.defaultValue = { value: defaultProps[prop.name] };
    }
    return prop;
}
//# sourceMappingURL=parseTSComponentProperty.js.map