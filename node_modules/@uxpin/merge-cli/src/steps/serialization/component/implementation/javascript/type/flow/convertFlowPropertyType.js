"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertFlowPropertyType = void 0;
const createUnsupportedTypeDefinition_1 = require("../../../createUnsupportedTypeDefinition");
const convertArrayFlowType_1 = require("./strategy/convertArrayFlowType");
const convertLiteralFlowType_1 = require("./strategy/convertLiteralFlowType");
const convertSignatureFlowType_1 = require("./strategy/convertSignatureFlowType");
const convertUnionFlowType_1 = require("./strategy/convertUnionFlowType");
const thunkCreatePrimitivePropertyType_1 = require("./strategy/thunkCreatePrimitivePropertyType");
const STRATEGIES = {
    Array: convertArrayFlowType_1.convertArrayFlowType,
    Function: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('func'),
    Object: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('object'),
    React$Component: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('element'),
    React$Element: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('element'),
    React$Node: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('node'),
    any: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('any'),
    bool: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('boolean'),
    boolean: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('boolean'),
    literal: convertLiteralFlowType_1.convertLiteralFlowType,
    null: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('empty'),
    number: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('number'),
    signature: convertSignatureFlowType_1.convertSignatureFlowType,
    string: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('string'),
    union: convertUnionFlowType_1.convertUnionFlowType,
    void: thunkCreatePrimitivePropertyType_1.thunkCreatePrimitivePropertyType('empty'),
};
function convertFlowPropertyType(propType) {
    if (STRATEGIES.hasOwnProperty(propType.name)) {
        const strategies = STRATEGIES;
        return strategies[propType.name](propType);
    }
    return createUnsupportedTypeDefinition_1.createUnsupportedTypeDefinition(propType.name);
}
exports.convertFlowPropertyType = convertFlowPropertyType;
//# sourceMappingURL=convertFlowPropertyType.js.map