"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertTypeToPropertyType = void 0;
const ts = require("typescript");
const isBooleanLike_1 = require("../checker/isBooleanLike");
const isCallable_1 = require("../checker/isCallable");
const isEnum_1 = require("../checker/isEnum");
const isKnownPropertyType_1 = require("../checker/isKnownPropertyType");
const isLiteral_1 = require("../checker/isLiteral");
const isObjectLike_1 = require("../checker/isObjectLike");
const isUnion_1 = require("../checker/isUnion");
const serializeAsUnsupportedType_1 = require("./serializeAsUnsupportedType");
const serializeEnumType_1 = require("./serializeEnumType");
const serializeKnownPropertyType_1 = require("./serializeKnownPropertyType");
const serializeLiteralType_1 = require("./serializeLiteralType");
const serializeUnionType_1 = require("./serializeUnionType");
// tslint:disable no-bitwise
function convertTypeToPropertyType(context, type, jsDocsTag) {
    if (type.flags & ts.TypeFlags.String) {
        return { name: 'string', structure: {} };
    }
    if (type.flags & ts.TypeFlags.Number) {
        return { name: 'number', structure: {} };
    }
    if (isBooleanLike_1.isBooleanLike(type)) {
        return { name: 'boolean', structure: {} };
    }
    if (type.flags & ts.TypeFlags.Any) {
        return { name: 'any', structure: {} };
    }
    if (isKnownPropertyType_1.isKnownPropertyType(type)) {
        return serializeKnownPropertyType_1.serializeKnownPropertyType(type);
    }
    if (isCallable_1.isCallable(type)) {
        return { name: 'func', structure: {} };
    }
    if (isObjectLike_1.isObjectLike(type)) {
        return { name: 'shape', structure: {} };
    }
    if (isUnion_1.isUnion(type)) {
        return serializeUnionType_1.serializeUnionType(context, type, jsDocsTag);
    }
    if (isEnum_1.isEnum(type)) {
        return serializeEnumType_1.serializeEnumType(type);
    }
    if (isLiteral_1.isLiteral(type)) {
        return serializeLiteralType_1.serializeLiteralType(type);
    }
    return serializeAsUnsupportedType_1.serializeAsUnsupportedType(type);
}
exports.convertTypeToPropertyType = convertTypeToPropertyType;
//# sourceMappingURL=convertTypeToPropertyType.js.map