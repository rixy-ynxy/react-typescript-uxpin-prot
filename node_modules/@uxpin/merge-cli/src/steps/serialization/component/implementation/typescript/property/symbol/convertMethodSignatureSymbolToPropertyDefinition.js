"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertMethodSignatureSymbolToPropertyDefinition = void 0;
const getJSDocDocumentation_1 = require("./getJSDocDocumentation");
const getPropertyCustomDescriptiors_1 = require("./getPropertyCustomDescriptiors");
const getPropertyName_1 = require("./getPropertyName");
const isPropertyRequired_1 = require("./isPropertyRequired");
function convertMethodSignatureSymbolToPropertyDefinition(context, methodSymbol) {
    const name = getPropertyName_1.getPropertyName(methodSymbol);
    if (!name) {
        throw new Error('Cannot get name from method symbol');
    }
    return Object.assign({ description: getJSDocDocumentation_1.getJSDocDocumentation(context, methodSymbol), isRequired: isPropertyRequired_1.isPropertyRequired(methodSymbol), name, type: { name: 'func', structure: {} } }, getPropertyCustomDescriptiors_1.getPropertyCustomDescriptors(methodSymbol));
}
exports.convertMethodSignatureSymbolToPropertyDefinition = convertMethodSignatureSymbolToPropertyDefinition;
//# sourceMappingURL=convertMethodSignatureSymbolToPropertyDefinition.js.map