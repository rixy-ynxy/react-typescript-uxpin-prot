"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const joinWarningLists_1 = require("../joinWarningLists");
describe('joinWarningLists', () => {
    describe('joining list of lists of warnings into a flat list', () => {
        it('returns flat array with of warning object supplied with source path', () => {
            const suppliedPath = '/Users/user/Projects/design-system/components/Button';
            const firstError = new Error();
            const firstWarning = {
                message: 'first message',
                originalError: firstError,
                sourcePath: 'other/source/Path',
            };
            const secondError = new Error('some message');
            const secondWaning = {
                message: 'second message',
                originalError: secondError,
            };
            const thirdError = new Error('some other message');
            const thirdWarning = {
                message: 'third message',
                originalError: thirdError,
            };
            const warningLists = [[firstWarning], [secondWaning, thirdWarning]];
            const expectedWarningList = [
                {
                    message: 'first message',
                    originalError: firstError,
                    sourcePath: 'other/source/Path',
                },
                {
                    message: 'second message',
                    originalError: secondError,
                    sourcePath: suppliedPath,
                },
                {
                    message: 'third message',
                    originalError: thirdError,
                    sourcePath: suppliedPath,
                },
            ];
            // when
            const result = joinWarningLists_1.joinWarningLists(warningLists, suppliedPath);
            // then
            expect(result).toEqual(expectedWarningList);
            const [firstResult, secondResult, thirdResult] = result;
            expect(firstResult).not.toBe(firstWarning);
            expect(secondResult).not.toBe(secondWaning);
            expect(thirdResult).not.toBe(thirdError);
        });
    });
});
//# sourceMappingURL=joinWarningLists.test.js.map