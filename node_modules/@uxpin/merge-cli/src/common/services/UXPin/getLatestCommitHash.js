"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLatestCommitHash = void 0;
const tslib_1 = require("tslib");
const requestPromiseWithEnhancedError_1 = require("../../../utils/requestPromiseWithEnhancedError");
const getAuthHeaders_1 = require("./headers/getAuthHeaders");
const getUserAgentHeaders_1 = require("./headers/getUserAgentHeaders");
const encodeBranchName_1 = require("./params/encodeBranchName");
function getLatestCommitHash(domain, branch, token) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const branchName = encodeBranchName_1.encodeBranchName(branch);
        return requestPromiseWithEnhancedError_1.requestPromiseWithEnhancedError(`${domain}/code/v/1.0/branch/${branchName}/latestCommit`, {
            headers: Object.assign(Object.assign({}, getAuthHeaders_1.getAuthHeaders(token)), getUserAgentHeaders_1.getUserAgentHeaders()),
            json: true,
            method: 'GET',
        })
            .then((data) => data ? data.commitHash : null);
    });
}
exports.getLatestCommitHash = getLatestCommitHash;
//# sourceMappingURL=getLatestCommitHash.js.map