"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGeneratePresetsCommandSteps = void 0;
const tslib_1 = require("tslib");
const pMapSeries = require("p-map-series");
const getComponentCategoryInfos_1 = require("../../../steps/discovery/component/category/getComponentCategoryInfos");
const printLine_1 = require("../../../utils/console/printLine");
const PresetFileGenerator_1 = require("../../../utils/fs/PresetFileGenerator/PresetFileGenerator");
const getProjectPaths_1 = require("../../args/providers/paths/getProjectPaths");
function getGeneratePresetsCommandSteps(args) {
    return [
        { exec: thunkGenerateFiles(args), shouldRun: true },
    ];
}
exports.getGeneratePresetsCommandSteps = getGeneratePresetsCommandSteps;
function generatePresetFile(path) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        try {
            const presetFile = new PresetFileGenerator_1.PresetFileGenerator(path);
            yield presetFile.init();
            yield presetFile.createPresetFile();
        }
        catch (e) {
            printLine_1.printError(e.message);
        }
    });
}
function thunkGenerateFiles(args) {
    return () => tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { componentPath } = args;
        if (componentPath) {
            yield generatePresetFile(componentPath);
        }
        else {
            const data = yield getComponentCategoryInfos_1.getComponentCategoryInfos(getProjectPaths_1.getProjectPaths(args));
            pMapSeries(data, (component) => {
                pMapSeries(component.componentInfos, (info) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                    yield generatePresetFile(info.implementation.path);
                }));
            });
        }
    });
}
//# sourceMappingURL=getGeneratePresetsCommandSteps.js.map