"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printBranchWarning = void 0;
const tslib_1 = require("tslib");
const constants_1 = require("../../../../common/constants");
const isTestEnv_1 = require("../../../../program/env/isTestEnv");
const printLine_1 = require("../../../../utils/console/printLine");
const PrintOptions_1 = require("../../../../utils/console/PrintOptions");
function printBranchWarning(designSystem) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const branch = designSystem.result.vcs.branchName;
        // Disallow uploading of branches that are empty (most commonly detached HEAD state)
        const isUnpushableBranch = !branch || branch === constants_1.HEAD_REF_NAME;
        if (!isTestEnv_1.isTestEnv() && isUnpushableBranch) {
            printLine_1.printLine('ðŸ›‘ Unable to determine current branch name (Design Systems may not be pushed from detached HEAD mode).', { color: PrintOptions_1.PrintColor.RED });
            console.info('Hint: please specify the --branch option if pushing from CI.');
            throw new Error(`Cannot push branch [${branch}]`);
        }
        return designSystem;
    });
}
exports.printBranchWarning = printBranchWarning;
//# sourceMappingURL=printBranchWarning.js.map